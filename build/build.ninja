# This is the build file for project "learn-opengl"
# It is autogenerated by the Meson build system.
# Do not edit by hand.

ninja_required_version = 1.5.1

# Rules for compiling.

rule cpp_COMPILER
 command = c++ $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C++ object $out.

rule cpp_PCH
 command = c++ $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Precompiling header $in.

rule c_COMPILER
 command = cc $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Compiling C object $out.

rule c_PCH
 command = cc $ARGS  -MD -MQ $out -MF '$DEPFILE' -o $out -c $in
 deps = gcc
 depfile = $DEPFILE
 description = Precompiling header $in.


# Rules for linking.

rule STATIC_LINKER
 command =  rm -f $out && gcc-ar $LINK_ARGS $out $in
 description = Linking static target $out.

rule cpp_LINKER
 command = c++ $ARGS -o $out $in $LINK_ARGS  $aliasing
 description = Linking target $out.

rule c_LINKER
 command = cc $ARGS -o $out $in $LINK_ARGS  $aliasing
 description = Linking target $out.


rule SHSYM
 command = /usr/bin/python /usr/bin/meson --internal symbolextractor $in $out $CROSS
 restat = 1
 description = Generating symbol file $out.

# Other rules

rule CUSTOM_COMMAND
 command = $COMMAND
 description = $DESC
 restat = 1

rule CUSTOM_COMMAND_DEP
 command = $COMMAND
 description = $DESC
 deps = gcc
 depfile = $DEPFILE
 restat = 1

rule REGENERATE_BUILD
 command = /usr/bin/python /usr/bin/meson --internal regenerate /home/zhenke/code/learn-opengl /home/zhenke/code/learn-opengl/build --backend ninja
 description = Regenerating build files.
 generator = 1


# Phony build target, always out of date
build PHONY: phony

# Build rules for targets

build subprojects/glad/subprojects@glad@@glad@sha/src_glad.c.o: c_COMPILER ../subprojects/glad/src/glad.c
 DEPFILE = subprojects/glad/subprojects@glad@@glad@sha/src_glad.c.o.d
 ARGS = -Isubprojects/glad/subprojects@glad@@glad@sha -Isubprojects/glad -I../subprojects/glad -I../subprojects/glad/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -O0 -g -fPIC

build subprojects/glad/subprojects@glad@@glad@sha/libglad.so.symbols: SHSYM subprojects/glad/libglad.so

build subprojects/glad/libglad.so: c_LINKER subprojects/glad/subprojects@glad@@glad@sha/src_glad.c.o | /usr/lib/libdl-2.27.so /usr/lib/libdl.a
 LINK_ARGS = -Wl,--no-undefined -Wl,--as-needed -shared -fPIC -Wl,--start-group -Wl,-soname,libglad.so -ldl -Wl,--end-group

build src/src@@stb_image@sha/stb_image.cpp.o: cpp_COMPILER ../src/stb_image.cpp
 DEPFILE = src/src@@stb_image@sha/stb_image.cpp.o.d
 ARGS = -Isrc/src@@stb_image@sha -Isrc -I../src -Iincludes -I../includes -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -O0 -g -fPIC

build src/src@@stb_image@sha/libstb_image.so.symbols: SHSYM src/libstb_image.so

build src/libstb_image.so: cpp_LINKER src/src@@stb_image@sha/stb_image.cpp.o
 LINK_ARGS = -Wl,--no-undefined -Wl,--as-needed -shared -fPIC -Wl,--start-group -Wl,-soname,libstb_image.so -Wl,--end-group

build src/1.getting_started/src@1.getting_started@@1.2.hello_world_clear@exe/1.2.helloworld_clear_hello_world_clear.cpp.o: cpp_COMPILER ../src/1.getting_started/1.2.helloworld_clear/hello_world_clear.cpp
 DEPFILE = src/1.getting_started/src@1.getting_started@@1.2.hello_world_clear@exe/1.2.helloworld_clear_hello_world_clear.cpp.o.d
 ARGS = -Isrc/1.getting_started/src@1.getting_started@@1.2.hello_world_clear@exe -Isrc/1.getting_started -I../src/1.getting_started -Iincludes -I../includes -Iconfiguration -I../configuration -I../subprojects/glad/include -I/usr/include/libdrm -I/usr/local/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -O0 -g -pthread

build src/1.getting_started/1.2.hello_world_clear: cpp_LINKER src/1.getting_started/src@1.getting_started@@1.2.hello_world_clear@exe/1.2.helloworld_clear_hello_world_clear.cpp.o | /usr/local/lib/libglfw3.a /usr/lib/libdl.a src/src@@stb_image@sha/libstb_image.so.symbols /usr/lib/libGL.so.1.0.0 subprojects/glad/subprojects@glad@@glad@sha/libglad.so.symbols /usr/lib/libdl-2.27.so /usr/lib/libX11.so.6.3.0
 LINK_ARGS = -Wl,--no-undefined -Wl,--as-needed -Wl,--start-group subprojects/glad/libglad.so src/libstb_image.so -pthread -lGL -L/usr/local/lib -lglfw3 -ldl -lX11 -Wl,--end-group '-Wl,-rpath,$$ORIGIN/../../subprojects/glad:$$ORIGIN/..' -Wl,-rpath-link,/home/zhenke/code/learn-opengl/build/subprojects/glad:/home/zhenke/code/learn-opengl/build/src

build src/1.getting_started/src@1.getting_started@@3.3.shaders_class@exe/3.3.shaders_class_shaders_class.cpp.o: cpp_COMPILER ../src/1.getting_started/3.3.shaders_class/shaders_class.cpp
 DEPFILE = src/1.getting_started/src@1.getting_started@@3.3.shaders_class@exe/3.3.shaders_class_shaders_class.cpp.o.d
 ARGS = -Isrc/1.getting_started/src@1.getting_started@@3.3.shaders_class@exe -Isrc/1.getting_started -I../src/1.getting_started -Iincludes -I../includes -Iconfiguration -I../configuration -I../subprojects/glad/include -I/usr/include/libdrm -I/usr/local/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -O0 -g -pthread

build src/1.getting_started/3.3.shaders_class: cpp_LINKER src/1.getting_started/src@1.getting_started@@3.3.shaders_class@exe/3.3.shaders_class_shaders_class.cpp.o | /usr/local/lib/libglfw3.a /usr/lib/libdl.a src/src@@stb_image@sha/libstb_image.so.symbols /usr/lib/libGL.so.1.0.0 subprojects/glad/subprojects@glad@@glad@sha/libglad.so.symbols /usr/lib/libdl-2.27.so /usr/lib/libX11.so.6.3.0
 LINK_ARGS = -Wl,--no-undefined -Wl,--as-needed -Wl,--start-group subprojects/glad/libglad.so src/libstb_image.so -pthread -lGL -L/usr/local/lib -lglfw3 -ldl -lX11 -Wl,--end-group '-Wl,-rpath,$$ORIGIN/../../subprojects/glad:$$ORIGIN/..' -Wl,-rpath-link,/home/zhenke/code/learn-opengl/build/subprojects/glad:/home/zhenke/code/learn-opengl/build/src

build src/1.getting_started/src@1.getting_started@@4.2.textures_combined@exe/4.2.textures_combined_textures_combined.cpp.o: cpp_COMPILER ../src/1.getting_started/4.2.textures_combined/textures_combined.cpp
 DEPFILE = src/1.getting_started/src@1.getting_started@@4.2.textures_combined@exe/4.2.textures_combined_textures_combined.cpp.o.d
 ARGS = -Isrc/1.getting_started/src@1.getting_started@@4.2.textures_combined@exe -Isrc/1.getting_started -I../src/1.getting_started -Iincludes -I../includes -Iconfiguration -I../configuration -I../subprojects/glad/include -I/usr/include/libdrm -I/usr/local/include -fdiagnostics-color=always -pipe -D_FILE_OFFSET_BITS=64 -Wall -Winvalid-pch -Wnon-virtual-dtor -O0 -g -pthread

build src/1.getting_started/4.2.textures_combined: cpp_LINKER src/1.getting_started/src@1.getting_started@@4.2.textures_combined@exe/4.2.textures_combined_textures_combined.cpp.o | /usr/local/lib/libglfw3.a /usr/lib/libdl.a src/src@@stb_image@sha/libstb_image.so.symbols /usr/lib/libGL.so.1.0.0 subprojects/glad/subprojects@glad@@glad@sha/libglad.so.symbols /usr/lib/libdl-2.27.so /usr/lib/libX11.so.6.3.0
 LINK_ARGS = -Wl,--no-undefined -Wl,--as-needed -Wl,--start-group subprojects/glad/libglad.so src/libstb_image.so -pthread -lGL -L/usr/local/lib -lglfw3 -ldl -lX11 -Wl,--end-group '-Wl,-rpath,$$ORIGIN/../../subprojects/glad:$$ORIGIN/..' -Wl,-rpath-link,/home/zhenke/code/learn-opengl/build/subprojects/glad:/home/zhenke/code/learn-opengl/build/src

# Test rules

build meson-test: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/python -u /usr/bin/meson test --no-rebuild --print-errorlogs
 DESC = Running$ all$ tests.
 pool = console

build test: phony meson-test

build meson-benchmark: CUSTOM_COMMAND all PHONY
 COMMAND = /usr/bin/python -u /usr/bin/meson test --benchmark --logbase benchmarklog --num-processes=1 --no-rebuild
 DESC = Running$ benchmark$ suite.
 pool = console

build benchmark: phony meson-benchmark

# Install rules

build meson-install: CUSTOM_COMMAND PHONY | all
 DESC = Installing$ files.
 COMMAND = /usr/bin/python /usr/bin/meson --internal install /home/zhenke/code/learn-opengl/build/meson-private/install.dat
 pool = console

build install: phony meson-install

build meson-dist: CUSTOM_COMMAND PHONY
 DESC = Creating$ source$ packages
 COMMAND = /usr/bin/python /usr/bin/meson --internal dist /home/zhenke/code/learn-opengl /home/zhenke/code/learn-opengl/build /usr/bin/python /usr/bin/meson
 pool = console

build dist: phony meson-dist

# Suffix

build meson-scan-build: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/python /usr/bin/meson --internal scanbuild /home/zhenke/code/learn-opengl /home/zhenke/code/learn-opengl/build /usr/bin/python /usr/bin/meson
 pool = console

build scan-build: phony meson-scan-build

build meson-uninstall: CUSTOM_COMMAND PHONY
 COMMAND = /usr/bin/python /usr/bin/meson --internal uninstall
 pool = console

build uninstall: phony meson-uninstall

build all: phony subprojects/glad/libglad.so src/libstb_image.so src/1.getting_started/1.2.hello_world_clear src/1.getting_started/3.3.shaders_class src/1.getting_started/4.2.textures_combined

default all

build clean: phony meson-clean

build meson-clean: CUSTOM_COMMAND PHONY
 COMMAND = ninja -t clean
 description = Cleaning.

build build.ninja: REGENERATE_BUILD ../meson.build ../subprojects/glad/meson.build ../includes/meson.build ../configuration/meson.build ../configuration/root_directory.h.in ../src/meson.build ../src/1.getting_started/meson.build ../src/1.getting_started/3.3.shaders_class/3.3.shader.fs ../src/1.getting_started/3.3.shaders_class/3.3.shader.vs ../src/1.getting_started/4.2.textures_combined/4.2.texture.fs ../src/1.getting_started/4.2.textures_combined/4.2.texture.vs meson-private/coredata.dat
 pool = console

build reconfigure: REGENERATE_BUILD PHONY
 pool = console

build ../meson.build ../subprojects/glad/meson.build ../includes/meson.build ../configuration/meson.build ../configuration/root_directory.h.in ../src/meson.build ../src/1.getting_started/meson.build ../src/1.getting_started/3.3.shaders_class/3.3.shader.fs ../src/1.getting_started/3.3.shaders_class/3.3.shader.vs ../src/1.getting_started/4.2.textures_combined/4.2.texture.fs ../src/1.getting_started/4.2.textures_combined/4.2.texture.vs meson-private/coredata.dat: phony 

